package lemon.hxdd;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Collections;

public class SoundInfo {
    public void Write() {
        try {
            String SettingPathTemp = (String)Settings.getInstance().Get("PathTemporary");
            FileWriter fw = new FileWriter(SettingPathTemp + "sndinfo.hexen2", false);
            PrintWriter out = new PrintWriter(fw);
            AddGeneratedByTag(out);
            ListFiles(null, out);
            out.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private void ListFiles(String path, PrintWriter out) {
        if (path == null) {
            path = Settings.getInstance().Get("PathSourceWads") + "/hexen2/data1/pak_files/sound";
        }

        String directoryName = path;
        File directory = new File(directoryName);

        File[] fileList = directory.listFiles();
        if(fileList != null)
            for (File file : fileList) {
                if (file.isFile()) {
                    try {
                        String p = file.getCanonicalPath();
                        p = p.replace("\\", "/");

                        String[] s = p.split("pak_files");
                        String logicalname  = (String)s[1].subSequence(1, s[1].length() - 4);
                        String lumpname = (String)s[1].subSequence(1, s[1].length());

                        // Setup naming convention and folder paths
                        logicalname = logicalname.replace("sound", "hexen2");
                        lumpname = lumpname.replace("sound", "sounds/hexen2");

                        String space = String.join("", Collections.nCopies(32 - logicalname.length(), " "));    // dumb, but it works
                        out.println(logicalname + space + "\"" + lumpname + "\"");
                    } catch (IOException ignored) {

                    }
                } else if (file.isDirectory()) {
                    out.println("");
                    ListFiles(file.getAbsolutePath(), out);
                }
            }
    }

    private void AddGeneratedByTag(PrintWriter writer) {
        writer.print("\n//\n// Generated by HXDD\n//\n\n");
    }
}
